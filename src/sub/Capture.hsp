
*SSCaptureOnMemory

	nidPush
	gsel WND_MAIN

	if (positionType == PT_RELATIVE || positionType = PT_WNDABSOLUTE){

		if (IsWindow(hClient) == 0){

			ssCap(0) = 0, 0, 0, 0
			hClient = 0
			ReleaseDC dcClient
			if seqCapf: gosub *seqcap

			gosub *ssSettingCheck

			LogOut "座標を見失いました\nブラウザが閉じられました"
			nidPop
			return 1
		}

		GetClientRect hClient, varptr(rect)
		if (clientSize(0) != (rect(2)-rect(0))) | (clientSize(1) != (rect(3)-rect(1))){

			ssCap(0) = 0, 0, 0, 0
			hClient = 0
			ReleaseDC dcClient
			if seqCapf: gosub *seqcap

			gosub *ssSettingCheck

			LogOut "座標を見失いました\nウィンドウサイズが変えられました"
			nidPop
			return 1
		}
	}

	//暫定数値直接入力
	sscap(0) = luposx
	sscap(1) = luposy
	sscap(2) = rdposx
	sscap(3) = rdposy
	sscapwh(0) = sscap(2)-sscap(0), sscap(3)-sscap(1)

	if ( (sscapwh(0) < 50) | (sscapwh(1) < 30) ){
		if (mode != MODE_OPTION){

			if seqCapf: gosub *seqcap
			positionType = 0

			LogOut "取得範囲が小さすぎます"
			ssCapMes = "取得する"
			objprm SSCapIId, ssCapMes

		}
		nidPop
		return 1
	}

	switch captureMethod

		case CM_BITBLT
			switch positionType
				case PT_RELATIVE
					logmes "PT_RELATIVE"
					GetWindowRect hClient, varptr(RECT)
					screenPosGame = RECT(0)+sscap(0), RECT(1)+sscap(1), 0, 0, sscapwh(0), sscapwh(1)
					gosub *AdaptiveHideWindow

					BitBlt WND_INFO(WND_CAPTURE, WI_DC), 0, 0, sscapwh(0), sscapwh(1), dcClient, sscap(0), sscap(1), SRCCOPY | CAPTUREBLT: redraw
					swbreak
				case PT_ABSOLUTE
					logmes "PT_ABSOLUTE"
					screenPosGame = sscap(0), sscap(1), 0, 0, sscapwh(0), sscapwh(1)
					gosub *AdaptiveHideWindow

					BitBlt WND_INFO(WND_CAPTURE, WI_DC), 0, 0, sscapwh(0), sscapwh(1), hdcScreen, sscap(0), sscap(1), SRCCOPY | CAPTUREBLT: redraw
					swbreak

				case PT_WNDABSOLUTE
					logmes "PT_WNDABSOLUTE"
					scrPoint = sscap(0), sscap(1)
					ClientToScreen hClient, varptr(scrPoint)
					screenPosGame = scrPoint(0), scrPoint(1), 0, 0, sscapwh(0), sscapwh(1)
					gosub *AdaptiveHideWindow

					BitBlt WND_INFO(WND_CAPTURE, WI_DC), 0, 0, sscapwh(0), sscapwh(1), hdcScreen, scrPoint(0), scrPoint(1), SRCCOPY | CAPTUREBLT: redraw
					swbreak
			swend
			swbreak

		case CM_PRINTWINDOW
			logmes "CM_PRINTWINDOW"
			GetWindowRect hClient, varptr(RECT)
			screenPosGame = RECT(0)+sscap(0), RECT(1)+sscap(1), 0, 0, sscapwh(0), sscapwh(1)
			gosub *AdaptiveHideWindow

			PrintWindow hClient, WND_INFO( WND_PRINTWND, WI_DC), 1
			gsel WND_CAPTURE: pos 0, 0
			gcopy WND_PRINTWND, sscap(0), sscap(1), sscapwh(0), sscapwh(1)
			swbreak

	swend

	if (AdaptiveHideWindowFlg) {
		SetLayeredWindowAttributes WND_INFO(WND_MAIN, WI_HANDLE), 0x00000000, 255, LWA_ALPHA
		SetLayeredWindowAttributes WND_INFO(WND_GRID, WI_HANDLE), 0x00000000, 255, LWA_ALPHA
		SetLayeredWindowAttributes WND_INFO(WND_TWITTER, WI_HANDLE), 0x00000000, 255, LWA_ALPHA
		AdaptiveHideWindowFlg = FALSE
	}

	if (forceResize){
		gsel WND_CAPTURE: pos 0, 0
		gzoom BASE_SIZE_W, BASE_SIZE_H, WND_CAPTURE, 0, 0, sscapwh(0), sscapwh(1), 1
		sscapwh(0) = BASE_SIZE_W, BASE_SIZE_H
	}

	cutPosY = 0

	if (hidename){
		if (isHomeport@isHomeportMod(WND_CAPTURE, sscapwh(0), sscapwh(1))){
			if (namecut): cutPosY = round(0.0625*sscapwh(1))
			//提督名とレベルを隠す処理
			gsel WND_CAPTURE: pos 0, 0

			pos 0.14125*sscapwh(0), 0
			gzoom 0.19375*sscapwh(0)*0.11, 0.05*sscapwh(1)*0.11, WND_CAPTURE, 0.14125*sscapwh(0), 0, 0.19375*sscapwh(0), 0.05*sscapwh(1), 0
			pos 0.14125*sscapwh(0), 0
			gzoom 0.19375*sscapwh(0), 0.05*sscapwh(1), WND_CAPTURE, 0.14125*sscapwh(0), 0, 0.19375*sscapwh(0)*0.11, 0.05*sscapwh(1)*0.11, 0

			if (noHideLv^1){
				pos 0.395*sscapwh(0), 0.0208333333*sscapwh(1)+0.9
				gzoom 0.22*sscapwh(0)*0.11, (0.0333333333*sscapwh(1)+0.5)*0.11, WND_CAPTURE, 0.395*sscapwh(0), 0.0208333333*sscapwh(1)+0.9, 0.22*sscapwh(0), 0.0333333333*sscapwh(1)+0.5, 0
				pos 0.395*sscapwh(0), 0.0208333333*sscapwh(1)+0.9
				gzoom 0.22*sscapwh(0), 0.0333333333*sscapwh(1)+0.5, WND_CAPTURE, 0.395*sscapwh(0), 0.0208333333*sscapwh(1)+0.9, 0.22*sscapwh(0)*0.11, (0.0333333333*sscapwh(1)+0.5)*0.11, 0
			}
		}
	}

	nidPop

return 0

*AdaptiveHideWindow
	//screenPosGame lx, ly, rx, ry, w, h
	//repeat 6
	//	logmes "screenPosGame("+cnt+") :"+screenPosGame(cnt)
	//loop

	if collisionWindow(screenPosGame, WND_INFO(WND_MAIN, WI_HANDLE)){
		SetLayeredWindowAttributes WND_INFO(WND_MAIN, WI_HANDLE), 0x00000000, 0, LWA_ALPHA
		AdaptiveHideWindowFlg = TRUE
	}
	if collisionWindow(screenPosGame, WND_INFO(WND_GRID, WI_HANDLE)){
		SetLayeredWindowAttributes WND_INFO(WND_GRID, WI_HANDLE), 0x00000000, 0, LWA_ALPHA
		AdaptiveHideWindowFlg = TRUE
	}
	if collisionWindow(screenPosGame, WND_INFO(WND_TWITTER, WI_HANDLE)){
		SetLayeredWindowAttributes WND_INFO(WND_TWITTER, WI_HANDLE), 0x00000000, 0, LWA_ALPHA
		AdaptiveHideWindowFlg = TRUE
	}
return

#module
dim rect, 6
#defcfunc collisionWindow array screenPosGame, int hwnd_
	GetWindowRect hwnd_, varptr(rect): rect(4)=rect(2)-rect(0): rect(5)=rect(3)-rect(1)
return ( (abs( (rect(0)+rect(4)/2)-(screenPosGame(0)+screenPosGame(4)/2))<(rect(4)+screenPosGame(4))/2) && (abs((rect(1)+rect(5)/2)-(screenPosGame(1)+screenPosGame(5)/2))<(rect(5)+screenPosGame(5))/2) )
#global

//SSキャプチャ――――――――――――――――――――――――――――――――――
*SSCapture

	nidPush

	gosub *SSCaptureOnMemory
	if (stat): nidPop: return 1

	successFlg = FALSE

	gsel WND_CAPTURE

	nSaveName = strf("%s%s", Format@DateTimeFormatMod(saveName(SN_CAPTURE)), savekind(jpgsave))

	if (seqCapf == FALSE){
		if (confirmSaveName(SN_CAPTURE)){
			SaveFileDialog saveNamePath, "画像ファイル(*.png)|*.png|画像ファイル( *.jpg)|*.jpg", jpgsave+1, nSaveName, ssSaveDir, strmid(savekind(jpgsave), 1, 3)
			if (stat == FALSE){
				logOut "キャンセルされました。"
				nidPop
				return 1
			}
			nSaveName = getpath@getpathMod(saveNamePath, 8)
		} else {
			saveNamePath = ssSaveDir +"\\"+ nSaveName
		}
	} else {
		saveNamePath = intervalShotDir+"\\"+intervalSaveDir+"\\" +nSaveName
	}


	ImgF_ImageSave saveNamePath, jpgQuality, 0, cutPosY, sscapwh(0), sscapwh(1)-cutPosY

	gsel WND_MAIN

	if (mode != MODE_OPTION){
		savedPicSize = _exist(savenamepath)
		if (savedPicSize == -1){
			successFlg = FALSE
			logmessage = nSaveName+"の保存に失敗しました"
		} else {

			successFlg = TRUE

			if dispcap & (mode == MODE_SSCAP){
				pos 0, dispcapy
				gzoom Scale(175), Scale(105), WND_CAPTURE, 0, 0, sscapwh(0), sscapwh(1)
			}

			if (seqcapf^1) {

				logmessage = nSaveName+"を保存しました"

				picHistoryLoad savenamepath
				gosub *TweetWindow
			}
		}
		logOut logmessage
	}

	nidPop
return (successFlg^1)

*addCapture

	gsel WND_GRID, 0

	if ( dropFlag && (dropWindowId == WND_GRID) ){
		xcnt = dragPoint(0)/cellsize(0)
		ycnt = dragPoint(1)/cellsize(1)
		dmxy(0) = xcnt, ycnt
		if bufIDPos(xcnt, ycnt) >= 100{
			dmxy(0) = xcnt, ycnt
			loadPicBufID(bufIDPos(xcnt, ycnt)-100) = 0
		}

	} else: if ( (hotKeyFlag && autoAddCapture) || (dropFlag && (dropWindowId == WND_MAIN))){

		//艦娘編成モードでは自動改行がないため
		if (listmode != LISTMODE_FLEET){
			ListModeHNumPrev = ListModeHNum
			if (0 <= (listLoadedNum+1) && (listLoadedNum+1) < 2): ListModeHNum = 1
			if (2 <= (listLoadedNum+1) && (listLoadedNum+1) < 7): ListModeHNum = 2
			if (7 <= (listLoadedNum+1) && (listLoadedNum+1) < 10): ListModeHNum = 3
			if (10 <= (listLoadedNum+1) && (listLoadedNum+1) < 17): ListModeHNum = 4
			if (17 <= (listLoadedNum+1) && (listLoadedNum+1) < 37): ListModeHNum = 5
			ListModeHNum = limit(ListModeHNum, 1, cellNum(1)+1)
			if (ListModeHNumPrev != ListModeHNum): gosub *ChangeListModeHNum
		}

		repeat
			if (listmode == LISTMODE_LIST){
				xcnt = cnt/ListModeHNum
				ycnt = cnt\ListModeHNum
			}
			if (listmode == LISTMODE_FLEET){
				if (nishimuraFlg^1){
					if tuika1{
						xcnt = (((cnt\(6*(cellnum(0)+1)/2))/6)*2)+(cnt\2)
						ycnt = ((cnt/((cellnum(0)+1)*3))*3)+((cnt\6)/2)
					}
					if tuika4{
						xcnt = (((cnt\(6*(cellnum(0)+1)/3))/6)*3)+(cnt\3)
						ycnt = ((cnt/((cellnum(0)+1)*2))*2)+((cnt\6)/3)
					}
					if tuika2 {
						xcnt = cnt\6
						ycnt = cnt/6
					}
					if tuika3{
						xcnt = cnt/6
						ycnt = cnt\6
					}
				} else {
					//7人
					if tuika1{
						if (cnt == 13):break
						if (cnt <= 6){
							xcnt = cnt\2
							ycnt = cnt/2
						} else {
							xcnt = 2+(cnt-1)\2
							ycnt = (cnt-1)/2-3
						}
						logmes strf("%d %d",xcnt,ycnt)
					}
					if tuika4{
						if (cnt == 13):break
						if (cnt <= 5){
							xcnt = cnt\3
							ycnt = cnt/3
						}
						if (cnt == 6){
							xcnt = 3
							ycnt = 1
						}
						if (cnt >= 7){
							xcnt = (cnt-1)\3
							ycnt = (cnt-1)/3
						}
					}
				}
			}
			if (listmode == LISTMODE_OTHER){
				xcnt = cnt/ListModeHNum
				ycnt = cnt\ListModeHNum
			}
			xcnt = limit(xcnt, 0, cellnum(0))
			ycnt = limit(ycnt, 0, cellnum(1))
			if (bufIDPos(xcnt, ycnt) == 0){
				dmxy(0) = xcnt, ycnt
				break
			}
			if (listMode != LISTMODE_LIST){
				if (xcnt=cellnum(0)) & (ycnt=cellnum(1)){
					dmxy(0) = xcnt, ycnt
					loadPicBufID(bufIDPos(xcnt, ycnt)-100) = 0
					break
				}
			} else {
				if (xcnt=cellnum(0)) & (ycnt=(ListModeHNum-1)){
					dmxy(0) = xcnt, ycnt
					loadPicBufID(bufIDPos(xcnt, ycnt)-100) = 0
					break
				}
			}
		loop

	}

	repeat (CELL_MAX_W*CELL_MAX_H)
		if (loadPicBufID(cnt) == FALSE){
			loadPicBufID(cnt) = TRUE
			bufid = cnt +100
			break
		}
	loop

	bufIDPos(dmxy(0), dmxy(1)) = bufid

	if (hotKeyFlag && autoAddNonSave) {

		picx = ssCapWH(0)
		picy = ssCapWH(1)
		ratio = 1.0*picy/picx
		//NameCutFlg = absf(ratio-(1.0*(BASE_SIZE_H-45)/BASE_SIZE_W))<=0.01
		NameCutFlg = absf(ratio-0.5625)<=0.01

		if (pastSize^1){
			buffer bufid, BASE_SIZE_W, BASE_SIZE_H
			pos 0, 45*NameCutFlg
			gzoom BASE_SIZE_W, BASE_SIZE_H-45*NameCutFlg, WND_CAPTURE, 0, 0, picx, picy, 1
		} else {
			buffer bufid, int(1.0*BASE_SIZE_W/1.5), int(1.0*BASE_SIZE_H/1.5)
			pos 0, 30*NameCutFlg
			gzoom int(1.0*BASE_SIZE_W/1.5), int(1.0*BASE_SIZE_H/1.5)-30*NameCutFlg, WND_CAPTURE, 0, 0, picx, picy, 1
		}

		LogOut strf("キャプチャをセル(%d, %d)に読み込みました", dmxy(0), dmxy(1))
		listLoadedNum++

	} else {

		buffer WND_TEMP1
		ImgF_PicloadEx addFileName
		picx = ginfo_winx
		picy = ginfo_winy
		ratio = 1.0*picy/picx
		//NameCutFlg = absf(ratio-(1.0*(BASE_SIZE_H-45)/BASE_SIZE_W))<=0.01
		NameCutFlg = absf(ratio-0.5625)<=0.01

		if (pastSize^1){
			buffer bufid, BASE_SIZE_W, BASE_SIZE_H
			pos 0, 45*NameCutFlg
			gzoom BASE_SIZE_W, BASE_SIZE_H-45*NameCutFlg, WND_TEMP1, 0, 0, picx, picy, 1
		} else {
			buffer bufid, int(1.0*BASE_SIZE_W/1.5), int(1.0*BASE_SIZE_H/1.5)
			pos 0, 30*NameCutFlg
			gzoom int(1.0*BASE_SIZE_W/1.5), int(1.0*BASE_SIZE_H/1.5)-30*NameCutFlg, WND_TEMP1, 0, 0, picx, picy, 1
		}

		LogOut strf("%sをセル(%d, %d)に読み込みました", getpath@getpathMod(addfilename, 11), dmxy(0), dmxy(1))
		listLoadedNum++
	}
	gsel WND_GRID
	gosub *draw


return

*SeqCapWriteStatTimerProcessing

	seqCapElapsedTime = timeGetTime() - seqCapStartTime

	logmessage = "連続キャプチャ中…\n"
	logmessage += strf("  経過時間 %s\n", cnvMilliSecondToMMSSMS@DateTimeFormatMod(seqCapElapsedTime))
	logmessage += strf("  枚数 %d枚(%dMB)", seqCapCnt, seqCapSize/1024/1024)
	LogOut logmessage
	if (seqcapf && enableSeqCapLimitNum): if (seqCapLimitNum < seqCapCnt): gosub *seqcap
	if (seqcapf && enableSeqCapLimitTime): if (seqCapLimitTime < seqCapElapsedTime): gosub *seqcap
	if (seqcapf && enableSeqCapLimitSize): if (seqCapLimitSize < seqCapSize/1024/1024): gosub *seqcap

return

//ホットキー――――――――――――――――――――――――――――――――――
*hotkey
	nidPush

	if (wparam = HOTKEYID) & (availablecap = 1){

		hotKeyFlag = TRUE

		//通常のホットキーによるキャプチャ
		if (mode == MODE_SSCAP){
			gosub *ssCapture
		}

		//一覧作成モードの自動追加ありのキャプチャ
		if ( (mode != MODE_SSCAP) && (mode != MODE_OPTION) && autoAddCapture ) {
			if autoAddNonSave{
				//保存なしの場合
				gosub *SSCaptureOnMemory
				if (stat==0){
					gosub *addCapture
				}
			} else {
				//保存ありの場合
				gosub *SSCapture
				if (stat==0){
					addFileName = saveNamePath
					gosub *addCapture
				}
			}
		}

		hotKeyFlag = FALSE
		addfilename = ""
	}

	nidPop
return

*seqcap

	nidPush
	gsel WND_MAIN, 0

	if (seqcapf == FALSE){

		seqcapf = TRUE

		seqCapCnt = 0
		seqCapSize = 0
		seqCapStartTime = timeGetTime()

		SetTimer WND_INFO(WND_MAIN, WI_HANDLE), SeqCapTimerID, 100*timersec, 0
		SetTimer WND_INFO(WND_MAIN, WI_HANDLE), SeqCapWriteStatTimerID, 500, 0

		seqcapmes = "停止"
		objprm seqcapBId, seqcapmes

		gosub *SSModeControlDisable

		chdir intervalShotDir
		intervalsavedir = strf("IntervalShot%04d%02d%02d-%02d%02d%02d", gettime(0), gettime(1), gettime(3), gettime(4), gettime(5), gettime(6))
		if PathIsDirectory(intervalShotDir+"\\"+intervalsavedir) = 0 {
			mkdir intervalsavedir
		}
		chdir currentdir

		gosub *SeqCapWriteStatTimerProcessing
		gosub *ssCapture
	} else {

		seqcapf = FALSE

		logmessage = "連続撮影を停止しました\n"
		logmessage += strf("  経過時間 %s\n", cnvMilliSecondToMMSSMS@DateTimeFormatMod(seqCapElapsedTime))
		logmessage += strf("  枚数 %d枚(%dMB)",seqCapCnt, seqCapSize/1024/1024)
		LogOut logmessage

		KillTimer WND_INFO(WND_MAIN, WI_HANDLE), SeqCapTimerID
		KillTimer WND_INFO(WND_MAIN, WI_HANDLE), SeqCapWriteStatTimerID
		seqcapmes = "開始"
		objprm seqcapBId, seqcapmes

		gosub *SSModeControlEnable

	}

	nidPop
return
